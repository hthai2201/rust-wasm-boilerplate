# You must change these to your own details.
[package]
name = "rust-wasm-boilerplate"
description = "Rust WASM Boilerplate"
version = "0.0.1"
authors = ["luke <hthai2201@gmail.com>"]
categories = ["wasm"]
readme = "README.md"
edition = "2018"

[lib]
crate-type = ["cdylib"]

[profile.release]
# This makes the compiled code faster and smaller, but it makes compiling slower,
# so it's only enabled in release mode.
lto = true
# debug = true

[dependencies]
# The `wasm-bindgen` crate provides the bare minimum functionality needed
# to interact with JavaScript.
js-sys = "0.3.51"
wasm-bindgen = "0.2.74"
wasm-bindgen-futures = "0.4.24"
rand = {version = "0.7", features = ["wasm-bindgen"]}
serde = { version = "*", features = ["derive"] }
serde_json = "1.0.64"
futures = "0.3.15"

# The `web-sys` crate allows you to interact with the various browser APIs,
# like the DOM.
[dependencies.web-sys]
version = "0.3.51"
features = [
    'Document',
    'Element',
    'EventTarget',
    'HtmlCanvasElement',
    'MouseEvent',
    'WebGlBuffer',
    'WebGlProgram',
    'WebGlRenderingContext',
    'WebGlShader',
    'WebGlUniformLocation',
    'Window',
]
# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so it's only enabled
# in debug mode.
[target."cfg(debug_assertions)".dependencies]
console_error_panic_hook = "0.1.5"

# These crates are used for running unit tests.
[dev-dependencies]
wasm-bindgen-test = "0.2.45"
